# problem 29
from abc import ABC
from Problem import AbsProblem


class Problem29(AbsProblem, ABC):
    details = "Project Euler. Problem 29:\n" \
              "Consider all integer combinations of a^b for 2<=a<=5 and 2<=b<=5: " \
              "as follows:\n" \
              "2^2=4,    2^3=8,    2^4=16,    2^5=25\n" \
              "3^2=9,    3^3=27,   3^4=81,    3^5=243\n" \
              "4^2=16,   4^3=64,   4^4=256,   4^5=1024\n" \
              "5^2=25,   5^3=125,  5^4=625,   5^5=3125\n" \
              "If they are then placed in numerical order, with any repeats removed, " \
              "we get the following sequence of 15 distinct terms:  \n" \
              "4,8,9,16,25,27,32,64,81,125,243,256,625,1024,3125  \n" \
              ">>How many distinct terms are in the sequence generated by a^b for 2<=a<=100 and 2<=b<=100?\n"
    __result_set = set()
    a_seq = range(2, 100 + 1)
    b_seq = range(2, 100 + 1)

    @property
    def getinfo(self):
        return self.details

    def result(self):
        return len(set([a**b for b in self.b_seq for a in self.a_seq]))
